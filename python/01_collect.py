#! python3

# coding: utf-8

# Date: 2021-02-17
# Author: GS
# Title: EV3 Character Recognition Experiment - Collect
# Description: 
#   Scan and log the light reflectivity of an alphanumeric character on a remote lego EV3 rotating platform
#   and return the datalogging file back to the local pc. 
# Version 
#   [1.0] 2021-02-17 Initial


import subprocess
from subprocess import call

def get_training_data(logfile, characters=[], rotations=10, interval=40):
    '''Scan characters remotely on lego reflectivity platform and return results'''
    
    for char in characters:

        print(f'Place character {char} on the platform')

        # Execute the 'main.py' script on the ev3. Existing logs (prefixed <filename> are deleted first)
        call(["ssh", "ev3", f"cd ./number_predict; rm {logfile}*; \
            brickrun -r -- pybricks-micropython main.py --label {char} --interval {interval} --rotations {rotations} --filename {logfile}"])

        # Copy the results log generated by the script back to the local PC
        subprocess.run(["scp", f"ev3:~/number_predict/{logfile}*", "./raw_data"])

        print(f'  - Character {char} has been scanned')


if __name__ == "__main__":

    # Initialise the function arguments
    chars = [str(x) for x in [1,2,3,4,5,6,7,8,9,0]]
    rots = 10
    filename = 'train'

    get_training_data(logfile=filename, characters=chars, rotations=rots)






